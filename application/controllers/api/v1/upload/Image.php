<?php defined('BASEPATH') OR exit('No direct script access allowed');

class Image extends SERVICE_Controller {
	
	private $tokenCheck;
	private $tokenData;
	private $tokenUserUid;
	
	public function __construct($config = array())
	{
		parent::__construct();
		
		$this->load->model('User_master_model');
		$this->load->model('User_profile_master_model');
		$this->load->model('User_personal_profile_master_model');
		$this->load->model('Master_model');
		$this->load->helper('url');
		log_message('debug', json_encode($this->post()));
		
		$this->tokenCheck = parent::getTokenDecodeResult();
		$this->tokenData = parent::getTokenDecodeData();
		
		if($this->tokenCheck == false) {
			parent::responseErrorOutputMaster(
				'정상 적인 접근이 아닙니다.',
				'406',
				[
					'token' => '정상적인 토근이 아닙니다.'
				]
			);
			return;
		}
		
		$this->tokenUserUid = $this->tokenData->user_uid;
	}
	
	public function __destruct()
	{
		parent::__destruct(); // TODO: Change the autogenerated stub
	}
	
	private function insertUploadLog($insertParams = array())
	{
		return $this->Master_model->insertUserUploadLog(
			$insertParams
		);
	}
	
	private function checkImagePostData($user_uid = NULL, $itemName = NULL)
	{
        $upload_directory = SITE_UPLOAD_DIR.'/image';

        $config['upload_path'] = $upload_directory;
        $config['allowed_types'] = 'gif|jpeg|png|jpg';
        $config['max_height'] = '1000';
        $config['max_width'] = '2048';
        $config['max_size'] = '1024';
        $config['file_name'] = $user_uid.'_'.time();

        $this->load->library('upload', $config);
        $this->upload->initialize($config);

        try
        {
        	$uploadResult = $this->upload->do_upload($itemName);
        	if($uploadResult == true)
	        {
	        	 return [
	        	 	'status' => true,
			         'data' => $this->upload->data()
		         ];
	        }
        	else
	        {
	        	return [
	        		'status' => false,
			        'data' => $this->upload->display_errors()
		        ];
	        }
        	
        }
        catch (Exception $e)
        {
	        return [
		        'status' => false,
		        'data' => $e
	        ];
        
        }
	}
	
	
	public function index_get($params = array())
	{
		parent::responseOutputMaster(
			[
				'api_name' => 'Image'
			]
		);
		return;
	}
	
	public function profile_post()
	{
		$user_uid = $this->post('user_uid');
		
		if(empty($user_uid))
		{
			parent::responseErrorOutputMaster(
				'사용자 정보가 없습니다.'
			);
			return;
		}
		
		if(strcmp($this->tokenUserUid, $user_uid))
		{
			parent::responseErrorOutputMaster(
				'본인의 정보가 아닙니다.'
			);
			return;
		}
		
		$uploadImageData = $this->checkImagePostData($user_uid, 'profile_image');
		
		if($uploadImageData['status'] == false)
		{
			parent::responseErrorOutputMaster(
				'이미지 처리중 에러가 발생 했습니다. 잠시후 다시 시도해 주세요.'
			);
			return;
		}
		
		$this->insertUploadLog([
			'user_uid' => $user_uid,
			'upload_code' => 'S02010',
			'client_type' => parent::getClientType(),
			'original_name' => $uploadImageData['data']['client_name'],
			'file_type' => $uploadImageData['data']['file_type'],
			'file_path' => $uploadImageData['data']['file_path'],
			'full_path' => $uploadImageData['data']['full_path'],
			'upload_name' => $uploadImageData['data']['orig_name'],
			'image_width' => $uploadImageData['data']['image_width'],
			'image_height' => $uploadImageData['data']['image_height'],
		]);
		
		
		$this->load->library(
			'imageprocess',[
				'client_type' => parent::getClientType(),
				'user_uid' => $user_uid,
				'image_source' => [
					'name' => $uploadImageData['data']['file_name'],
					'file_ext' => $uploadImageData['data']['file_ext'],
					'path' => $uploadImageData['data']['file_path'],
					'full_path' => $uploadImageData['data']['full_path'],
					'image_type' => $uploadImageData['data']['image_type'],
				]
			]
		);
	
		$this->imageprocess->doProfileImageProcessing();
		$getResult = $this->imageprocess->getProfileImageProcessResult();
		
		if($getResult['status'] == true)
		{
			$this->imageprocess->updateUserProfileImage($getResult['data']['image_file_name']);
			
			parent::responseOutputMaster(
				[
					'image_file_name' => $getResult['data']['image_file_name'],
					'profile_image_url' => $getResult['data']['image_url'],
				],
				'처리가 완료 되었습니다.'
			);
			return;
		}
		else
		{
			parent::responseErrorOutputMaster(
				'이미지 처리중 에러가 발생 했습니다. 잠시후 다시 시도해 주세요.'
			);
			return;
		}
	}
	
}